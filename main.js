(()=>{"use strict";const s=new WebSocket("wss://ahj-homeworks-sse-ws-1-back.herokuapp.com/ws");s.binaryType="blob";const e=document.getElementsByClassName("registration")[0],t=document.getElementsByClassName("app")[0],i=new class{constructor(s){this.client=s,this.client.addEventListener("message",(s=>this.message(s))),this.callbacks=new Map}message(s){const e=JSON.parse(s.data);this.callbacks.get(e.operation)(e)}send(s){this.client.send(JSON.stringify(s))}addCallback(s,e){this.callbacks.set(s,e)}}(s),n=new class{constructor(s,e){this.api=s,this.userID="",this.form=e,this.api.addCallback("users-list",this.usersList.bind(this)),this.api.addCallback("chat-info",this.chatInfo.bind(this)),this.api.addCallback("output-message",this.outputMessage.bind(this)),this.currentUser=void 0,this.users=new Map,e.getElementsByClassName("exit_button")[0].addEventListener("click",this.exitButtonClick.bind(this)),e.getElementsByClassName("chat_input")[0].addEventListener("keydown",this.messageKeydown.bind(this))}registrationSuccess(){this.userID=localStorage.getItem("userID"),this.api.send({operation:"users-list"})}usersList(s){if(!s.success)return void console.log(s.error);const e=this.form.getElementsByClassName("users")[0];for(let s=-(e.children.length-1);s<=0;s++){let t=e.children[-s];t.removeEventListener("click",this.userClick.bind(this)),t.remove()}let t;this.users.clear(),s.users_list.forEach((s=>{if(s.id===this.userID)return;const i=document.createElement("div");i.dataset.ID=s.id,i.classList.add("user"),i.innerHTML=`<span class="user-name">${s.name}</span>`,i.addEventListener("click",this.userClick.bind(this)),this.currentUser===s.id&&(i.classList.add("user-select"),t=s.id),e.appendChild(i),this.users.set(s.id,s.name)})),void 0===t&&(this.currentUser=void 0,this.form.getElementsByClassName("chat")[0].classList.add("chat_none"))}userClick(s){const e=this.form.getElementsByClassName("user");for(const t of e)if(t.classList.contains("user-select")){if(t===s.target)return;t.classList.remove("user-select")}s.currentTarget.classList.add("user-select"),this.currentUser=s.currentTarget.dataset.ID,this.api.send({operation:"chat-info",user_id:this.userID,recipient_id:this.currentUser})}messageKeydown(s){if(13!==s.keyCode)return;const e=s.currentTarget.value;this.api.send({operation:"send-message",user_id:this.userID,recipient_id:this.currentUser,message:e}),s.currentTarget.value=""}chatInfo(s){if(!s.success)return void console.log(s.error);const e=this.form.getElementsByClassName("chat")[0];e.classList.remove("chat_none");const t=e.getElementsByClassName("messages")[0];t.innerHTML="";for(let e of s.messages){const s=this.createMessageDiv(e);t.appendChild(s)}}outputMessage(s){if(s.message.user_id!==this.currentUser&&s.message.user_id!==this.userID)return;const e=this.createMessageDiv(s.message);this.form.getElementsByClassName("messages")[0].appendChild(e)}createMessageDiv(s){const e=new Intl.DateTimeFormat("ru",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric"}).format(new Date(s.time)).replace(",",""),t=document.createElement("div");return s.user_id===this.userID?(t.classList.add("outgoing"),t.innerHTML=`\n                <span class="outgoing-text"> ${s.text} </span>\n                <span class="outgoing-date"> ${e} </span>`):(t.classList.add("incoming"),t.innerHTML=`\n                <span class="incoming-author">${this.users.get(s.user_id)}:</span>\n                <span class="incoming-text"> ${s.text} </span>\n                <span class="incoming-date"> ${e} </span>`),t}exitButtonClick(){}}(i,t);new class{constructor(s,e,t){this.api=s,this.element=e,this.api.addCallback("registration",this.responseHandler.bind(this)),this.registrationSuccess=t,this.element.getElementsByClassName("registration_button")[0].addEventListener("click",(()=>this.buttonClick()))}buttonClick(){const s=this.element.getElementsByClassName("registration_input")[0];this.api.send({operation:"registration",name:s.value})}responseHandler(s){s.success?(localStorage.setItem("userID",s.user_id),this.element.classList.add("registration_none"),this.registrationSuccess()):console.log(s.error)}}(i,e,n.registrationSuccess.bind(n))})();